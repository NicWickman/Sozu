{
	"schemaVersion": "2.0.0",
	"contractName": "MockV2Aggregator",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "int256",
						"name": "_initialAnswer",
						"type": "int256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "int256",
						"name": "current",
						"type": "int256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "updatedAt",
						"type": "uint256"
					}
				],
				"name": "AnswerUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "startedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startedAt",
						"type": "uint256"
					}
				],
				"name": "NewRound",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "getAnswer",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "getTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestAnswer",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int256",
						"name": "_answer",
						"type": "int256"
					}
				],
				"name": "updateAnswer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "_answer",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "_timestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_startedAt",
						"type": "uint256"
					}
				],
				"name": "updateRoundData",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"title": "MockV2Aggregator",
			"version": 1
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b5060405161029b38038061029b8339818101604052602081101561003357600080fd5b505161003e81610044565b50610079565b600081815542600181815560028054909101808255835260036020908152604080852095909555905483526004905291902055565b610213806100886000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639ab29f451161005b5780639ab29f45146100ac578063a87a20ce146100dd578063b5ab58dc146100fa578063b633620c146101175761007d565b806350d25bcd14610082578063668a0f021461009c5780638205bf6a146100a4575b600080fd5b61008a610134565b60408051918252519081900360200190f35b61008a61013a565b61008a610140565b6100db600480360360808110156100c257600080fd5b5080359060208101359060408101359060600135610146565b005b6100db600480360360208110156100f357600080fd5b5035610184565b61008a6004803603602081101561011057600080fd5b50356101b9565b61008a6004803603602081101561012d57600080fd5b50356101cb565b60005481565b60025481565b60015481565b600284815560008481556001849055948552600360209081526040808720959095558154865260048152848620939093555484526005909152912055565b600081815542600181815560028054909101808255835260036020908152604080852095909555905483526004905291902055565b60036020526000908152604090205481565b6004602052600090815260409020548156fea2646970667358221220925945f569ff9baf89569fc4f6a0a050a668c1ff99d66400290acb2354be254364736f6c63430007000033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x29B CODESIZE SUB DUP1 PUSH2 0x29B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x3E DUP2 PUSH2 0x44 JUMP JUMPDEST POP PUSH2 0x79 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP2 DUP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 ADD DUP1 DUP3 SSTORE DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP1 SLOAD DUP4 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x213 DUP1 PUSH2 0x88 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AB29F45 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9AB29F45 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x117 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x134 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x13A JUMP JUMPDEST PUSH2 0x8A PUSH2 0x140 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP5 DUP2 SSTORE PUSH1 0x0 DUP5 DUP2 SSTORE PUSH1 0x1 DUP5 SWAP1 SSTORE SWAP5 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 SLOAD DUP7 MSTORE PUSH1 0x4 DUP2 MSTORE DUP5 DUP7 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP2 DUP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 ADD DUP1 DUP3 SSTORE DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP1 SLOAD DUP4 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 MSIZE GASLIMIT CREATE2 PUSH10 0xFF9BAF89569FC4F6A0A0 POP 0xA6 PUSH9 0xC1FF99D66400290ACB 0x23 SLOAD 0xBE 0x25 NUMBER PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
				"sourceMap": "373:1021:25:-:0;;;717:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;717:89:25;773:28;717:89;773:12;:28::i;:::-;717:89;373:1021;;810:231;869:12;:22;;;915:15;897;:33;;;936:11;:13;;;;;;;;955:22;;:9;:22;;;;;;;;:32;;;;1006:11;;993:25;;:12;:25;;;;;:43;810:231::o;373:1021::-;;;;;;;"
			},
			"deployedBytecode": {
				"immutableReferences": {},
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80639ab29f451161005b5780639ab29f45146100ac578063a87a20ce146100dd578063b5ab58dc146100fa578063b633620c146101175761007d565b806350d25bcd14610082578063668a0f021461009c5780638205bf6a146100a4575b600080fd5b61008a610134565b60408051918252519081900360200190f35b61008a61013a565b61008a610140565b6100db600480360360808110156100c257600080fd5b5080359060208101359060408101359060600135610146565b005b6100db600480360360208110156100f357600080fd5b5035610184565b61008a6004803603602081101561011057600080fd5b50356101b9565b61008a6004803603602081101561012d57600080fd5b50356101cb565b60005481565b60025481565b60015481565b600284815560008481556001849055948552600360209081526040808720959095558154865260048152848620939093555484526005909152912055565b600081815542600181815560028054909101808255835260036020908152604080852095909555905483526004905291902055565b60036020526000908152604090205481565b6004602052600090815260409020548156fea2646970667358221220925945f569ff9baf89569fc4f6a0a050a668c1ff99d66400290acb2354be254364736f6c63430007000033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AB29F45 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9AB29F45 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x117 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0xA4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x134 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x13A JUMP JUMPDEST PUSH2 0x8A PUSH2 0x140 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x146 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP5 DUP2 SSTORE PUSH1 0x0 DUP5 DUP2 SSTORE PUSH1 0x1 DUP5 SWAP1 SSTORE SWAP5 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 SLOAD DUP7 MSTORE PUSH1 0x4 DUP2 MSTORE DUP5 DUP7 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP2 DUP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 ADD DUP1 DUP3 SSTORE DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP1 SLOAD DUP4 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 MSIZE GASLIMIT CREATE2 PUSH10 0xFF9BAF89569FC4F6A0A0 POP 0xA6 PUSH9 0xC1FF99D66400290ACB 0x23 SLOAD 0xBE 0x25 NUMBER PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
				"sourceMap": "373:1021:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:35;;;:::i;:::-;;;;;;;;;;;;;;;;508;;;:::i;465:39::-;;;:::i;1045:347::-;;;;;;;;;;;;;;;;-1:-1:-1;1045:347:25;;;;;;;;;;;;;;;;;:::i;:::-;;810:231;;;;;;;;;;;;;;;;-1:-1:-1;810:231:25;;:::i;548:52::-;;;;;;;;;;;;;;;;-1:-1:-1;548:52:25;;:::i;604:56::-;;;;;;;;;;;;;;;;-1:-1:-1;604:56:25;;:::i;426:35::-;;;;:::o;508:::-;;;;:::o;465:39::-;;;;:::o;1045:347::-;1177:11;:22;;;1205:12;:22;;;1233:15;:28;;;1267:22;;;:9;:22;;;;;;;;:32;;;;1318:11;;1305:25;;:12;:25;;;;;:38;;;;1362:11;1349:25;;:12;:25;;;;;:38;1045:347::o;810:231::-;869:12;:22;;;915:15;897;:33;;;936:11;:13;;;;;;;;955:22;;:9;:22;;;;;;;;:32;;;;1006:11;;993:25;;:12;:25;;;;;:43;810:231::o;548:52::-;;;;;;;;;;;;;:::o;604:56::-;;;;;;;;;;;;;:::o"
			},
			"methodIdentifiers": {
				"getAnswer(uint256)": "b5ab58dc",
				"getTimestamp(uint256)": "b633620c",
				"latestAnswer()": "50d25bcd",
				"latestRound()": "668a0f02",
				"latestTimestamp()": "8205bf6a",
				"updateAnswer(int256)": "a87a20ce",
				"updateRoundData(uint256,int256,uint256,uint256)": "9ab29f45"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_initialAnswer\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"}],\"name\":\"updateAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startedAt\",\"type\":\"uint256\"}],\"name\":\"updateRoundData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"MockV2Aggregator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on the HistoricAggregator contractUse this contract when you need to test other contract's ability to read data from an aggregator contract, but how the aggregator got its answer is unimportant\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/tests/MockV2Aggregator.sol\":\"MockV2Aggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xf852be8b4d172513729c84650a04c94b91712fa1751ef41c57592b5484daa381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://690d94f3d2fe189052df5afd1e5bf1ca21b0c2b326ca0ddea7206f96c39df690\",\"dweb:/ipfs/QmW1e6r2K2Y2jmsYzGzbuX2fwew49hFL2TTVpVWHR4Rday\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/tests/MockV2Aggregator.sol\":{\"keccak256\":\"0xe546280f8ed8486edb645541c502451b286d2fdc5c25873be4bc554485bfa483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c4f8816068d0824ddfa3df98dcca856d56513951a9b5928b965f1eb3b1d4cb\",\"dweb:/ipfs/QmQgH7pvabJN39i3Bu6nLpBaJvpbtwDe7nATfmiDy2VvG9\"]}},\"version\":1}",
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Based on the HistoricAggregator contractUse this contract when you need to test other contract's ability to read data from an aggregator contract, but how the aggregator got its answer is unimportant",
			"version": 1
		}
	},
	"sources": {
		"tests/MockV2Aggregator.sol": {
			"id": 25
		},
		"interfaces/AggregatorInterface.sol": {
			"id": 11
		}
	},
	"sourceCodes": {
		"tests/MockV2Aggregator.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"../interfaces/AggregatorInterface.sol\";\n\n/**\n * @title MockV2Aggregator\n * @notice Based on the HistoricAggregator contract\n * @notice Use this contract when you need to test\n * other contract's ability to read data from an\n * aggregator contract, but how the aggregator got\n * its answer is unimportant\n */\ncontract MockV2Aggregator is AggregatorInterface {\n  int256 public override latestAnswer;\n  uint256 public override latestTimestamp;\n  uint256 public override latestRound;\n\n  mapping(uint256 => int256) public override getAnswer;\n  mapping(uint256 => uint256) public override getTimestamp;\n  mapping(uint256 => uint256) private getStartedAt;\n\n  constructor(\n    int256 _initialAnswer\n  ) public {\n    updateAnswer(_initialAnswer);\n  }\n\n  function updateAnswer(\n    int256 _answer\n  ) public {\n    latestAnswer = _answer;\n    latestTimestamp = block.timestamp;\n    latestRound++;\n    getAnswer[latestRound] = _answer;\n    getTimestamp[latestRound] = block.timestamp;\n  }\n\n  function updateRoundData(\n    uint256 _roundId,\n    int256 _answer,\n    uint256 _timestamp,\n    uint256 _startedAt\n  ) public {\n    latestRound = _roundId;\n    latestAnswer = _answer;\n    latestTimestamp = _timestamp;\n    getAnswer[latestRound] = _answer;\n    getTimestamp[latestRound] = _timestamp;\n    getStartedAt[latestRound] = _startedAt;\n  }\n}\n",
		"interfaces/AggregatorInterface.sol": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0;\n\ninterface AggregatorInterface {\n  function latestAnswer() external view returns (int256);\n  function latestTimestamp() external view returns (uint256);\n  function latestRound() external view returns (uint256);\n  function getAnswer(uint256 roundId) external view returns (int256);\n  function getTimestamp(uint256 roundId) external view returns (uint256);\n\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\n}\n"
	},
	"sourceTreeHashHex": "0x33594bef4a0031f3ff5b88447a71cc013231268c4e14a3f010ab28ef7f9fceb8",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.7.0+commit.9e61f92b.js",
		"settings": {
			"optimizer": {
				"runs": 1000000,
				"enabled": true
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"remappings": []
		}
	},
	"chains": {}
}