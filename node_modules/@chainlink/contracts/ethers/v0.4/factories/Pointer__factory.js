"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
class Pointer__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_addr, overrides) {
        return super.deploy(_addr, overrides);
    }
    getDeployTransaction(_addr, overrides) {
        return super.getDeployTransaction(_addr, overrides);
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Pointer__factory = Pointer__factory;
const _abi = [
    {
        constant: true,
        inputs: [],
        name: "getAddress",
        outputs: [
            {
                name: "",
                type: "address",
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                name: "_addr",
                type: "address",
            },
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50604051602080610117833981016040525160008054600160a060020a03909216600160a060020a031990921691909117905560c6806100516000396000f300608060405260043610603e5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338cc483181146043575b600080fd5b348015604e57600080fd5b506055607e565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60005473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b3df641519ffa06dac1dfa593325678bdc530879c5f358b56a2109a27396505e0029";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9pbnRlcl9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlBvaW50ZXJfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLCtDQUErQztBQUMvQyxvQkFBb0I7QUFDcEIsb0JBQW9COztBQUVwQixtQ0FBMkQ7QUFPM0QsTUFBYSxnQkFBaUIsU0FBUSx3QkFBZTtJQUNuRCxZQUFZLE1BQWU7UUFDekIsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFhLEVBQUUsU0FBZ0M7UUFDcEQsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxTQUFTLENBQXFCLENBQUM7SUFDNUQsQ0FBQztJQUNELG9CQUFvQixDQUNsQixLQUFhLEVBQ2IsU0FBZ0M7UUFFaEMsT0FBTyxLQUFLLENBQUMsb0JBQW9CLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFDRCxNQUFNLENBQUMsT0FBZTtRQUNwQixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFZLENBQUM7SUFDMUMsQ0FBQztJQUNELE9BQU8sQ0FBQyxNQUFjO1FBQ3BCLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQXFCLENBQUM7SUFDbkQsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFPLENBQ1osT0FBZSxFQUNmLGdCQUFtQztRQUVuQyxPQUFPLElBQUksaUJBQVEsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixDQUFZLENBQUM7SUFDbEUsQ0FBQztDQUNGO0FBMUJELDRDQTBCQztBQUVELE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxRQUFRLEVBQUUsSUFBSTtRQUNkLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLFlBQVk7UUFDbEIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELE9BQU8sRUFBRSxLQUFLO1FBQ2QsZUFBZSxFQUFFLE1BQU07UUFDdkIsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLElBQUksRUFBRSxPQUFPO2dCQUNiLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxPQUFPLEVBQUUsS0FBSztRQUNkLGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxhQUFhO0tBQ3BCO0NBQ0YsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUNiLGtqQkFBa2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBdXRvZ2VuZXJhdGVkIGZpbGUuIERvIG5vdCBlZGl0IG1hbnVhbGx5LiAqL1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCB7IENvbnRyYWN0LCBDb250cmFjdEZhY3RvcnksIFNpZ25lciB9IGZyb20gXCJldGhlcnNcIjtcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcImV0aGVycy9wcm92aWRlcnNcIjtcbmltcG9ydCB7IFVuc2lnbmVkVHJhbnNhY3Rpb24gfSBmcm9tIFwiZXRoZXJzL3V0aWxzL3RyYW5zYWN0aW9uXCI7XG5cbmltcG9ydCB7IFRyYW5zYWN0aW9uT3ZlcnJpZGVzIH0gZnJvbSBcIi4uXCI7XG5pbXBvcnQgeyBQb2ludGVyIH0gZnJvbSBcIi4uL1BvaW50ZXJcIjtcblxuZXhwb3J0IGNsYXNzIFBvaW50ZXJfX2ZhY3RvcnkgZXh0ZW5kcyBDb250cmFjdEZhY3Rvcnkge1xuICBjb25zdHJ1Y3RvcihzaWduZXI/OiBTaWduZXIpIHtcbiAgICBzdXBlcihfYWJpLCBfYnl0ZWNvZGUsIHNpZ25lcik7XG4gIH1cblxuICBkZXBsb3koX2FkZHI6IHN0cmluZywgb3ZlcnJpZGVzPzogVHJhbnNhY3Rpb25PdmVycmlkZXMpOiBQcm9taXNlPFBvaW50ZXI+IHtcbiAgICByZXR1cm4gc3VwZXIuZGVwbG95KF9hZGRyLCBvdmVycmlkZXMpIGFzIFByb21pc2U8UG9pbnRlcj47XG4gIH1cbiAgZ2V0RGVwbG95VHJhbnNhY3Rpb24oXG4gICAgX2FkZHI6IHN0cmluZyxcbiAgICBvdmVycmlkZXM/OiBUcmFuc2FjdGlvbk92ZXJyaWRlc1xuICApOiBVbnNpZ25lZFRyYW5zYWN0aW9uIHtcbiAgICByZXR1cm4gc3VwZXIuZ2V0RGVwbG95VHJhbnNhY3Rpb24oX2FkZHIsIG92ZXJyaWRlcyk7XG4gIH1cbiAgYXR0YWNoKGFkZHJlc3M6IHN0cmluZyk6IFBvaW50ZXIge1xuICAgIHJldHVybiBzdXBlci5hdHRhY2goYWRkcmVzcykgYXMgUG9pbnRlcjtcbiAgfVxuICBjb25uZWN0KHNpZ25lcjogU2lnbmVyKTogUG9pbnRlcl9fZmFjdG9yeSB7XG4gICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmVyKSBhcyBQb2ludGVyX19mYWN0b3J5O1xuICB9XG4gIHN0YXRpYyBjb25uZWN0KFxuICAgIGFkZHJlc3M6IHN0cmluZyxcbiAgICBzaWduZXJPclByb3ZpZGVyOiBTaWduZXIgfCBQcm92aWRlclxuICApOiBQb2ludGVyIHtcbiAgICByZXR1cm4gbmV3IENvbnRyYWN0KGFkZHJlc3MsIF9hYmksIHNpZ25lck9yUHJvdmlkZXIpIGFzIFBvaW50ZXI7XG4gIH1cbn1cblxuY29uc3QgX2FiaSA9IFtcbiAge1xuICAgIGNvbnN0YW50OiB0cnVlLFxuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJnZXRBZGRyZXNzXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIixcbiAgICAgIH0sXG4gICAgXSxcbiAgICBwYXlhYmxlOiBmYWxzZSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBuYW1lOiBcIl9hZGRyXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgfSxcbiAgICBdLFxuICAgIHBheWFibGU6IGZhbHNlLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJjb25zdHJ1Y3RvclwiLFxuICB9LFxuXTtcblxuY29uc3QgX2J5dGVjb2RlID1cbiAgXCIweDYwODA2MDQwNTIzNDgwMTU2MTAwMTA1NzYwMDA4MGZkNWI1MDYwNDA1MTYwMjA4MDYxMDExNzgzMzk4MTAxNjA0MDUyNTE2MDAwODA1NDYwMDE2MGEwNjAwMjBhMDM5MDkyMTY2MDAxNjBhMDYwMDIwYTAzMTk5MDkyMTY5MTkwOTExNzkwNTU2MGM2ODA2MTAwNTE2MDAwMzk2MDAwZjMwMDYwODA2MDQwNTI2MDA0MzYxMDYwM2U1NzYzZmZmZmZmZmY3YzAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2MDAwMzUwNDE2NjMzOGNjNDgzMTgxMTQ2MDQzNTc1YjYwMDA4MGZkNWIzNDgwMTU2MDRlNTc2MDAwODBmZDViNTA2MDU1NjA3ZTU2NWI2MDQwODA1MTczZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjkwOTIxNjgyNTI1MTkwODE5MDAzNjAyMDAxOTBmMzViNjAwMDU0NzNmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMTY4MTU2MDBhMTY1NjI3YTdhNzIzMDU4MjBiM2RmNjQxNTE5ZmZhMDZkYWMxZGZhNTkzMzI1Njc4YmRjNTMwODc5YzVmMzU4YjU2YTIxMDlhMjczOTY1MDVlMDAyOVwiO1xuIl19