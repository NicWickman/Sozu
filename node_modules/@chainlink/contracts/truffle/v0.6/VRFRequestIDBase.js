'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const contract = require('@truffle/contract')
const VRFRequestIDBase = contract({
 "contractName": "VRFRequestIDBase",
 "abi": [],
 "evm": {
  "bytecode": {
   "linkReferences": {},
   "object": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b594a3a3b66c6a3299fb110d0e5017989ee50a12e75534383f428c1925e3081064736f6c63430006060033",
   "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP5 LOG3 LOG3 0xB6 PUSH13 0x6A3299FB110D0E5017989EE50A SLT 0xE7 SSTORE CALLVALUE CODESIZE EXTCODEHASH TIMESTAMP DUP13 NOT 0x25 0xE3 ADDMOD LT PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
   "sourceMap": "57:1524:24:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;57:1524:24;;;;;;;"
  },
  "deployedBytecode": {
   "immutableReferences": {},
   "linkReferences": {},
   "object": "0x6080604052600080fdfea2646970667358221220b594a3a3b66c6a3299fb110d0e5017989ee50a12e75534383f428c1925e3081064736f6c63430006060033",
   "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP5 LOG3 LOG3 0xB6 PUSH13 0x6A3299FB110D0E5017989EE50A SLT 0xE7 SSTORE CALLVALUE CODESIZE EXTCODEHASH TIMESTAMP DUP13 NOT 0x25 0xE3 ADDMOD LT PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
   "sourceMap": "57:1524:24:-:0;;;12:1:-1;9;2:12"
  },
  "methodIdentifiers": {}
 },
 "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/VRFRequestIDBase.sol\":\"VRFRequestIDBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/VRFRequestIDBase.sol\":{\"keccak256\":\"0x0c3bd40c63dac8398a979b1228c8ecb1c269c157dd16f2dce2086d2270b65b22\",\"urls\":[\"bzz-raw://ed9db87be9dfb0f763a556d8d80356b08282b8ea48484838cdf470a5c3cd15d5\",\"dweb:/ipfs/QmPLhwDAS3TPDiEQmTyqXnWBqwEMBSbXtjEiQDSGejoiPt\"]}},\"version\":1}"
})

if (process.env.NODE_ENV === 'test') {
  try {
    eval('VRFRequestIDBase.setProvider(web3.currentProvider)')
  } catch (e) {}
}

exports.VRFRequestIDBase = VRFRequestIDBase
